server {
  listen 80;
  server_name _;

  root /usr/share/nginx/html;
  index index.html index.htm;

  # Test endpoint to verify nginx config is updated
  location /nginx-test {
    return 200 '{"status": "nginx-config-updated", "timestamp": "'$(date)'"}';
    add_header Content-Type application/json;
  }

  # ✅ Proxy /api/* to the backend - MUST come before the catch-all location
  location /api/ {
    # Remove /api/ prefix when proxying to backend
    rewrite ^/api/(.*)$ /$1 break;
    proxy_pass http://logreader-server.prod-we.com/;
    proxy_connect_timeout 5s;
    proxy_send_timeout 10s;
    proxy_read_timeout 10s;
    add_header X-Proxy-Debug "api-proxy" always;
    add_header X-Request-URI $request_uri always;
    add_header X-Backend-Status $upstream_status always;
    add_header X-Upstream-Response-Time $upstream_response_time always;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Host $host;
    
    # Handle backend errors
    proxy_intercept_errors on;
    error_page 502 503 504 = @fallback;
  }

  # ✅ Handle /app/logs path - redirect to backend
  location /app/logs/ {
    proxy_pass http://logreader-server.prod-we.com/;
    proxy_connect_timeout 5s;
    proxy_send_timeout 10s;
    proxy_read_timeout 10s;
    add_header X-Proxy-Debug "app-logs-proxy" always;
    add_header X-Request-URI $request_uri always;
    add_header X-Backend-Status $upstream_status always;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Host $host;
    
    # Handle backend errors
    proxy_intercept_errors on;
    error_page 502 503 504 = @fallback;
  }

  # Fallback location for backend errors
  location @fallback {
    return 503 '{"error": "Backend service unavailable", "message": "The API server is not responding"}';
    add_header Content-Type application/json;
  }

  # ✅ Serve React SPA properly (fallback to index.html) - MUST be last
  location / {
    try_files $uri /index.html;
  }

  # Default error pages
  error_page 500 502 503 504 /50x.html;
  location = /50x.html {
    root /usr/share/nginx/html;
  }
}